name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  schedule:
    - cron: '*/30 * * * *'  # Runs every 30 minutes

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: stocks_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build Docker image
        run: |
          docker build -t aleksandrarancic/stock_prediction_api:${{ github.sha }} .

      - name: Run tests
        run: |
          docker-compose -f docker-compose_test.yml up --build --abort-on-container-exit

      - name: Push Docker image to registry
        run: |
          echo "Stock@Investigations2024.MLOps" | docker login -u "aleksandrarancic" --password-stdin
          docker push aleksandrarancic/stock_prediction_api:latest
          docker push aleksandrarancic/stock_prediction_api:${{ github.sha }}
          
      - name: Push Test Docker image to registry
        run: |
          docker tag aleksandrarancic/stock_prediction_api:${{ github.sha }} aleksandrarancic/stock_prediction_api:test
          docker push aleksandrarancic/stock_prediction_api:test

      - name: Deploy to production
        run: |
          ssh deploy@192.168.216.174 'docker pull aleksandrarancic/stock_prediction_api:latest && docker-compose up -d'

