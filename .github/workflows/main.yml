name: CI/CD Pipeline

# Run the workflow whenever there is a push or pull request on the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job for running the tests
  test:
    runs-on: ubuntu-latest

    services:
      # Database service (PostgreSQL) as specified in docker-compose.yml
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: stocks_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Python environment (corrected Python version)
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    # Cache the dependencies to speed up subsequent runs
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Run the tests
    - name: Run tests
      run: |
        pytest test_api.py

  # Job for building and deploying the Docker container (optional)
  deploy:
    runs-on: ubuntu-latest

    # Only run this job after the 'test' job has completed successfully
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to DockerHub with hardcoded credentials
    - name: Log in to DockerHub
      run: echo "Stock@Investigation2024.MLOps" | docker login -u "aleksandrarancic" --password-stdin

    # Build the Docker image
    - name: Build and push Docker image
      run: |
        docker build -t aleksandrarancic/stock-prediction-api:latest .
        docker push aleksandrarancic/stock-prediction-api:latest
